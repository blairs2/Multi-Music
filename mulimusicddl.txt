create schema geddisn_db collate utf8mb4_0900_ai_ci;

create table Artist
(
	artist_id int auto_increment
		primary key,
	artist_name varchar(50) not null
);

create table Album
(
	album_id int auto_increment
		primary key,
	artist_id int not null,
	album_name varchar(50) not null,
	constraint Album_Artist_artist_id_fk
		foreign key (artist_id) references Artist (artist_id)
);

create table Artist_album
(
	artist_album_id int auto_increment
		primary key,
	artist_id int not null,
	album_id int not null,
	constraint Artist_album_Album_album_id_fk
		foreign key (album_id) references Album (album_id),
	constraint Artist_album_Artist_artist_id_fk
		foreign key (artist_id) references Artist (artist_id)
);

create table Song
(
	song_id int auto_increment
		primary key,
	artist_id int not null,
	song_name varchar(30) not null,
	SpotifyToken varchar(30) null,
	AppleToken varchar(30) null,
	constraint Song_Artist_artist_id_fk
		foreign key (artist_id) references Artist (artist_id)
);

create table Song_album
(
	song_album_id int auto_increment
		primary key,
	song_id int not null,
	album_id int not null,
	constraint Song_album_Album_album_id_fk
		foreign key (album_id) references Album (album_id),
	constraint Song_album_Song_song_id_fk
		foreign key (song_id) references Song (song_id)
);

create table User
(
	user_id int auto_increment
		primary key,
	Username varchar(50) not null,
	Password int not null,
	Spotify_id varchar(50) not null default 'None',
	Apple_id varchar(50) not null default 'None",
);

create table Playlist
(
	playlist_id int auto_increment
		primary key,
	playlist_name varchar(50) not null,
	user_id int not null,
	constraint Playlist_User_user_id_fk
		foreign key (user_id) references User (user_id)
);

create table Song_playlist
(
	song_playlist_id int auto_increment
		primary key,
	song_id int not null,
	playlist_id int not null,
	user_id int not null,
	constraint Song_playlist_Playlist_playlist_id_fk
		foreign key (playlist_id) references Playlist (playlist_id),
	constraint Song_playlist_Song_song_id_fk
		foreign key (song_id) references Song (song_id),
	constraint Song_playlist_User_user_id_fk
		foreign key (user_id) references User (user_id)
);

create table User_Playlist
(
	user_playlist_id int not null
		primary key,
	user_id int not null,
	playlist_id int not null,
	can_edit tinyint(1) default 0 not null,
	constraint User_Playlist_Playlist_playlist_id_fk
		foreign key (playlist_id) references Playlist (playlist_id),
	constraint User_Playlist_User_user_id_fk
		foreign key (user_id) references User (user_id)
);

